name: Deploy pipeline

on:
  push:
    branches:
      - 'develop'
      - 'staging'
      - 'main'

jobs:
  build-and-analyze:
    uses: ./.github/workflows/build-and-analyze.yaml
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker-push:
    runs-on: ubuntu-latest
    needs: build-and-analyze
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
        
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
          
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/shipping-service:latest
  
  deploy:
    runs-on: ubuntu-latest
    env:
      EKS-CLUSTER-SUFFIX: ${{ github.ref_name == 'main' && 'production' || github.ref_name == 'staging' && 'staging' || github.ref == 'develop' && 'dev' }}
    needs: docker-push
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Set Up Kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        kubectl version --client

    - name: Set Up Helm
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh
    
    - name: Checkout
      uses: actions/checkout@v3.5.3
      with:
        repository: practicodevops/practico-devops-infrastructure
        ref: refs/heads/main
        path: kubernetes

    - name: Configure Kubernetes context
      run: |
        aws eks update-kubeconfig --name eks-cluster-${{ env.EKS-CLUSTER-SUFFIX }} --region us-east-1

    - name: Deploy to EKS
      run: |
        kubectl apply -f ingress.yaml
        helm upgrade -i ingress-nginx ingress-nginx/ingress-nginx \
        --namespace kube-system \
        --set controller.service.type=LoadBalancer
        helm upgrade -i shipping ./helm-charts/shipping-service